{"version":3,"file":"index.js","mappings":"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","sources":["webpack://consistency/./src/app/controls.js","webpack://consistency/./src/app/data.js","webpack://consistency/./src/app/fix.js","webpack://consistency/./src/app/helpers.js","webpack://consistency/./src/app/rules.js","webpack://consistency/./src/components/ConsistencyGlobalSettingToggle.js","webpack://consistency/./src/components/ConsistencyUserSettingToggle.js","webpack://consistency/./src/components/Icon.js","webpack://consistency/./src/components/Settings.js","webpack://consistency/external window [\"wp\",\"components\"]","webpack://consistency/external window [\"wp\",\"coreData\"]","webpack://consistency/external window [\"wp\",\"data\"]","webpack://consistency/external window [\"wp\",\"domReady\"]","webpack://consistency/external window [\"wp\",\"editPost\"]","webpack://consistency/external window [\"wp\",\"element\"]","webpack://consistency/external window [\"wp\",\"i18n\"]","webpack://consistency/external window [\"wp\",\"notices\"]","webpack://consistency/external window [\"wp\",\"plugins\"]","webpack://consistency/webpack/bootstrap","webpack://consistency/webpack/runtime/compat get default export","webpack://consistency/webpack/runtime/define property getters","webpack://consistency/webpack/runtime/global","webpack://consistency/webpack/runtime/hasOwnProperty shorthand","webpack://consistency/webpack/runtime/make namespace object","webpack://consistency/./src/index.js"],"sourcesContent":["/**\n * WordPress dependencies\n */\nimport { select } from '@wordpress/data'\n\n/**\n * External dependencies\n */\nimport { getCurrentLocale } from './data'\nimport { regs, regsWithPair, processedBlocks } from './rules'\n\nconst { getBlockName, getBlockAttributes } = select( 'core/block-editor' )\n\n\n/**\n * Check if setting is used by current active locale\n *\n * @param {string} settingSlug Slug of setting, same as regex\n * @return {boolean} \n */\nexport const isUsedByLocale = settingSlug => {\n\n\tconst currentLocale = getCurrentLocale()\n\tconst theRegex = regs?.find( x => x.name === settingSlug )\n\n\tif ( undefined !== theRegex && theRegex?.locales?.includes( currentLocale ) ) {\n\t\treturn true\n\t}\n\n\treturn false\n\n}\n\n/**\n * Checks if the current block should be checked or not\n *\n * @param {string} currentBlockId currentBlockId current active block ID\n * @return {boolean} Should the block be checked?\n */\nexport const blockShouldBeChecked = currentBlockId => {\n\n\tconst blockName = getBlockName( currentBlockId )\n\tif ( processedBlocks.includes( blockName ) ) {\n\t\treturn true\n\t}\n\treturn false\n\n}\n\n/**\n * Checks if the current block can be checked or not\n *\n * @param {string} currentBlockId currentBlockId current active block ID\n * @return {boolean} Can the block be checked?\n */\nexport const blockCanBeChecked = currentBlockId => {\n\n\tconst blockAttributes = getBlockAttributes( currentBlockId )\n\tif ( blockAttributes && blockAttributes.hasOwnProperty( 'content' ) && '' !== blockAttributes.content ) {\n\t\treturn true\n\t}\n\treturn false\n\n}\n\n/**\n * Checks if the regex processes a pair\n *\n * @param {string} reg regex\n * @return {boolean} Does the regex process a pair?\n */\nexport const regDealWithPair = reg => {\n\n\tif ( regsWithPair.includes( reg.name ) ) {\n\t\treturn true\n\t}\n\treturn false\n\n}","/**\n * WordPress dependencies\n */\nimport { store as coreStore } from '@wordpress/core-data'\nimport { select } from '@wordpress/data'\n\nconst { getEntityRecord } = select( 'core' )\n\n/**\n * Get current user settings from usermeta\n *\n * @return {object} userSettings Current user settings: userSettings.onTheFly, userSettings.onPaste\n */\nexport const getCurrentUserSettings = () => {\n\n\tconst userSettings = {\n\t\tonTheFly: false,\n\t\tonPaste: false\n\t}\n\tconst currentUser = select( coreStore ).getCurrentUser()\n\tconst idUser = currentUser?.id || 0\n\tconst currentUserEntity = getEntityRecord( 'root', 'user', idUser, 'consistency_plugin_user_settings' )\n\tconst userConsistencySettings = currentUserEntity?.meta?.consistency_plugin_user_settings\n\tuserSettings.onTheFly = userConsistencySettings?.find( s => s.slug === 'on_the_fly' )?.value || false\n\tuserSettings.onPaste = userConsistencySettings?.find( s => s.slug === 'on_paste' )?.value || false\n\n\treturn userSettings\n\n}\n\n/**\n * Get current active site locale\n *\n * @return {string} currentLocale Current active site locale\n */\nexport const getCurrentLocale = () => {\n\n\tconst siteEntity = getEntityRecord( 'root', 'site' )\n\tconst currentLocale = siteEntity?.language || 'en_US'\n\treturn currentLocale\n\n}","/**\r\n * WordPress dependencies\r\n */\r\nimport { select, dispatch } from '@wordpress/data'\r\n\r\n/**\r\n * External dependencies\r\n */\r\nimport { getReplacementStringForPairs, aMemoryLeakHasOccured, getCursorPositionInInnerHTML } from './helpers'\r\nimport { isUsedByLocale, blockShouldBeChecked, blockCanBeChecked, regDealWithPair } from './controls'\r\n\r\nconst { getBlock, getBlockAttributes, getSelectionStart, isTyping } = select( 'core/block-editor' )\r\nconst { updateBlock, selectionChange } = dispatch( 'core/block-editor' )\r\n\r\n/**\r\n * Fixes the typography of one block\r\n *\r\n * @param {object} props String currentBLockId Current selected block ID, Array theRegs all regex, Boolean isPasting\r\n */\r\nexport const fixIt = props => {\r\n\r\n\tconst { currentBlockId, theRegs, isPasting } = props\r\n\r\n\tconst block = getBlock( currentBlockId )\r\n\r\n\t// Check if the current block should be checked and can be checked\r\n\tif ( ! blockShouldBeChecked( currentBlockId ) || ! blockCanBeChecked( currentBlockId ) ) return\r\n\r\n\tlet blockAttributes = getBlockAttributes( currentBlockId )\r\n\r\n\t// Loop on regular expressions\r\n\tObject.entries( theRegs ).forEach( ( [ _, reg ] ) => {\r\n\r\n\t\tglobal.consistencyLoop ++\r\n\t\r\n\t\tif ( global.consistencyLoop > 150 ) {\r\n\t\t\taMemoryLeakHasOccured( currentBlockId )\r\n\t\t}\r\n\r\n\t\tlet replaceWithThis = reg.replace\r\n\t\tlet firstPart = ''\r\n\t\tlet lastPart = ''\r\n\t\tlet cursorPosition = 0\r\n\t\tlet blockContent = blockAttributes.content\r\n\t\tlet selectionStart\r\n\r\n\t\t// Remove 'code' 'pre' and 'kbd' tags from block content\r\n\t\tlet textContentWithoutCode = blockContent.replace(/<\\b(code|pre|kbd)\\b>.*?<\\/\\b(code|pre|kbd)\\b>/gi, '')\r\n\r\n\t\t// Remove HTML tags from block content\r\n\t\tlet textContent = textContentWithoutCode.replace(/(<([^>]+)>)/gi, '')\r\n\r\n\t\t// Check if block content is concerned by the regex\r\n\t\tlet isConcerned = false\r\n\t\tif ( ! isTyping() ) {\r\n\t\t\tisConcerned = reg.mask.test( textContent )\r\n\t\t}\r\n\r\n\t\t// Content splitting in case of typing on the fly to allow the user to undo a correction\r\n\t\t// If isTyping is false, it is the processing of pasted innerBlocks\r\n\t\tif ( isTyping() ) {\r\n\r\n\t\t\t// Get cursor position in textContent (without tags): needed for cursor repositioning\r\n\t\t\tselectionStart = getSelectionStart( block.name )\r\n\t\t\tcursorPosition = selectionStart?.offset || 0\r\n\r\n\t\t\t// Get cursor position in HTML (with tags): needed to cut at the right position\r\n\t\t\tconst cursorPositionInsideHTML = getCursorPositionInInnerHTML( currentBlockId ) || cursorPosition\r\n\r\n\t\t\t// If the rule depends on previous characters, we need to separate the string taking those characters into account\r\n\t\t\tconst captureGroups = textContent.match( reg.mask )\r\n\t\t\tif( null === captureGroups || 0 === captureGroups.length ) return\r\n\t\t\tconst lengthToGoBack = captureGroups[0].length || 1\t\t\t\r\n\r\n\t\t\t// Split the string to process only the part from the cursor position to the end\r\n\t\t\tfirstPart = blockContent.substring( 0, cursorPositionInsideHTML - lengthToGoBack )\r\n\t\t\tlastPart = blockContent.substring( cursorPositionInsideHTML - lengthToGoBack, blockContent.length )\r\n\t\t\t\r\n\t\t\t// If first part of the string matches but not the lastPart, it means that a character has been typed uncorrected voluntarily before, so it should not be taken into account\r\n\t\t\tisConcerned = reg.mask.test( textContent ) && reg.mask.test( lastPart )\r\n\r\n\t\t}\r\n\t\t\r\n\t\t// Stop correction if block content isn't concerned by the regex nor by the current site locale (language)\r\n\t\tif ( ! isConcerned || ! isUsedByLocale( reg.name ) ) return\r\n\r\n\t\t// Pairing characters need specific process for the replacement\r\n\t\tif ( regDealWithPair( reg ) ) {\r\n\t\t\treplaceWithThis = getReplacementStringForPairs( reg, blockContent, replaceWithThis )\r\n\t\t}\r\n\r\n\t\t// Concat strings\r\n\t\tif ( 0 !== cursorPosition ) {\r\n\t\t\tblockContent = firstPart + lastPart.replace( reg.mask, replaceWithThis )\r\n\t\t}\r\n\r\n\t\t// Pasted content innerBlocks case: no selection, no cursor position so the whole block is fixed \r\n\t\tif ( 0 === cursorPosition ) {\r\n\t\t\tblockContent = blockContent.replace( reg.mask, reg.replace )\r\n\t\t}\r\n\r\n\t\t// If CTRL Z was used just before, then we do not correct this time\r\n\t\tif ( true === global.consistencyHistory ) {\r\n\t\t\tglobal.consistencyHistory = false\r\n\t\t\treturn\r\n\t\t}\r\n\r\n\t\t// Update block\r\n\t\tif ( false === global.consistencyHistory ) {\r\n\t\t\tupdateBlock( currentBlockId, {\r\n\t\t\t\t...block,\r\n\t\t\t\tattributes: { ...block.attributes, content: blockContent }\r\n\t\t\t} )\r\n\t\t}\r\n\r\n\r\n\t\t// Cursor repositioning:\r\n\t\tif ( 0 === reg.nbMoved || 0 === cursorPosition || isPasting ) return\r\n\r\n\t\t// If the replaced string had more characters than the new string, the cursor has moved forward, so it must be moved back\r\n\t\t// Eg: ... replaced with … removes 2 characters\r\n\t\tif ( reg.nbMoved < 0 ) {\r\n\t\t\tselectionChange( currentBlockId, selectionStart.attributeKey, cursorPosition - 1, cursorPosition + reg.nbMoved )\r\n\t\t}\r\n\t\t\r\n\t\t// If the replaced string had fewer characters than the new string, the cursor has moved backwards, so it must be moved forward\r\n\t\t// Eg: \"\" replaced with «  » adds 2 characters\r\n\t\tif ( reg.nbMoved > 0 ) {\r\n\t\t\tselectionChange( currentBlockId, selectionStart.attributeKey, cursorPosition + 1 + reg.nbMoved, cursorPosition + reg.nbMoved )\r\n\t\t}\r\n\r\n\t} )\r\n\r\n\tglobal.consistencyLoop = 0\r\n\r\n}\r\n","/**\r\n * WordPress dependencies\r\n */\r\nimport { select, dispatch } from '@wordpress/data'\r\n\r\nconst { getBlock } = select( 'core/block-editor' )\r\nconst { updateBlock } = dispatch( 'core/block-editor' )\r\n\r\n/**\r\n * Get all innerBlocks from an array of parents\r\n * The main use is to retrieve the child core/list-item blocks of the core/list block\r\n *\r\n * @param {*} arr\r\n */\r\nexport const getAllInnersFromParents = arr => arr.flatMap( ( { innerBlocks, ...rest } ) => \r\n\r\n\tinnerBlocks.map( b => ( {\r\n\t\t...rest,\r\n\t\t...b\r\n\t} ) )\r\n\r\n)\r\n\r\n/**\r\n * Get specific replacement string for pairing characters by checking if we are on opening one or closing one\r\n *\r\n * Character pairs have between 3 and 5 parts to be cut in the \"replace\" part:\r\n * opening character pair + left separator + string between the pair + right separator + closing character pair\r\n * french quotes eg: « +   + $1 +   + »\r\n * left and right separators are optionals\r\n * \r\n * @param {object} reg Replacement parameters\r\n * @param {string} fullBlockContent Full block string\r\n * @param {string} replaceWithThis Replacement string\r\n * @return {string} replaceWithThis Replacement string\r\n */\r\nexport const getReplacementStringForPairs = ( reg, fullBlockContent, replaceWithThis ) => {\r\n\r\n\t// Get the opening and closing characters of the pair\r\n\tconst openPairChar = reg.replace.charAt( 0 )\r\n\tconst closPairChar = reg.replace.charAt( reg.replace.length - 1 )\r\n\r\n\t// Get left separator and right separators\r\n\tconst leftSep = reg.replace.substring( 1, reg.replace.indexOf( '$' ) ) || ''\r\n\r\n\tlet rightSep = ''\r\n\tif ( 0 !== [ ...reg.replace.matchAll( /[0-9]/g ) ].length ) {\r\n\t\t// Right separator begins after last number from last capturing group\r\n\t\trightSep = reg.replace.substring( [ ...reg.replace.matchAll( /[0-9]/g ) ].pop()['index'] + 1, reg.replace.length -1 )\r\n\t}\r\n\r\n\t// Check if the character should be opening or closing by testing the odd or even number\r\n\tconst getOpenPairRegex = new RegExp( `${ openPairChar }`, 'g' )\r\n\tconst getClosPairRegex = new RegExp( `${ closPairChar }`, 'g' )\r\n\tconst nbOpenPair = ( fullBlockContent.match( getOpenPairRegex ) || [] ).length\r\n\tconst nbClosPair = ( fullBlockContent.match( getClosPairRegex ) || [] ).length\r\n\t\t\r\n\treplaceWithThis = nbOpenPair === nbClosPair ? openPairChar + leftSep : rightSep + closPairChar\r\n\treturn replaceWithThis\r\n\r\n}\r\n\r\n/**\r\n * Stop the process in the regex loop if a code error generates an infinite loop\r\n * by removing last 2 characters and adding a message in the console\r\n *\r\n * @param {string} currentBlockId currentBlockId current active block ID\r\n */\r\nexport const aMemoryLeakHasOccured = currentBlockId => {\r\n\r\n\tconst block = getBlock( currentBlockId )\r\n\r\n\tupdateBlock( currentBlockId, {\r\n\t\t...block,\r\n\t\tattributes: { ...block.attributes, content: block.attributes.content.slice( -2 ) }\r\n\t} )\r\n\r\n\tglobal.consistency_loop = 0\r\n\tconsole.log( 'Consistency - a memory leak has occured' )\r\n\r\n}\r\n\r\n/**\r\n * Get current cursor position in HTML content\r\n *\r\n * @param {string} currentBlockId Active current block ID\r\n * @return {integer} cursor position in HTML content\r\n */\r\nexport const getCursorPositionInInnerHTML = currentBlockId => {\r\n\t\r\n\t// Get current block DOM Node\r\n\tconst currentActiveBlock = document.querySelector( `#block-${ currentBlockId }` )\r\n\tif ( null === currentActiveBlock ) return undefined\r\n\r\n\t// Get current selection\r\n\tconst selection = document.getSelection()\r\n\tconst _range = selection?.getRangeAt( 0 )\r\n\r\n\t// Return if user is selecting text instead of typing\r\n\tif ( ! _range.collapsed ) return\r\n\r\n\t// Clone range to work on\r\n\tconst range = _range.cloneRange()\r\n\r\n\t// Create a temporary node to target\r\n\tconst tempNode = document.createTextNode( '\\0' )\r\n\r\n\t// Insert temporary node as target into cloned range\r\n\trange.insertNode( tempNode )\r\n\r\n\t// Get position of target inside active block HTML\r\n\tlet cursorPositionInsideHTML = currentActiveBlock?.innerHTML?.indexOf( '\\0' )\r\n\r\n\t// Remove temporary node and normalize cut node - important!\r\n\ttempNode.parentNode.removeChild( tempNode )\r\n\tcurrentActiveBlock.normalize()\r\n\r\n\t// Remove non-breaking spaces in &nbsp; format from the count\r\n\tconst nbNbsp = (currentActiveBlock?.innerHTML.match(/&nbsp;/g) || []).length\r\n\tif ( nbNbsp > 0 ) {\r\n\t\tcursorPositionInsideHTML = cursorPositionInsideHTML - ( nbNbsp * 6 ) + nbNbsp\r\n\t}\r\n\r\n\treturn cursorPositionInsideHTML\r\n}\r\n","// List of all processed blocks (obligation to filter them because not all of them have textual content)\r\nexport const processedBlocks = [\r\n\t'core/paragraph',\r\n\t'core/heading',\r\n\t'core/quote',\r\n\t'core/list-item',\r\n\t'core/read-more',\r\n]\r\n\r\n// List of all correction rules with each regular expression used\r\nexport const regs = [\r\n\t{\r\n\t\t// Replaces straight quote with curly quote\r\n\t\tname: 'quote', // slug of the setting and the related regex\r\n\t\tmask: /\\'/, // mask\r\n\t\treplace: '’', // replacement string\r\n\t\tnbMoved: 0, // number of characters less or more during replacement\r\n\t\tlocales: [ 'fr_FR', 'fr_BE', 'en_US', 'en_AU', 'en_CA', 'en_NZ', 'en_ZA', 'en_GB' ] // concerned locales\r\n\t},\r\n\t{\r\n\t\t// Replaces three dots with ellipsis\r\n\t\tname: 'ellipsis',\r\n\t\tmask: /\\.{3}/,\r\n\t\treplace: '…',\r\n\t\tnbMoved: -2,\r\n\t\tlocales: [ 'fr_FR', 'fr_BE', 'en_US', 'en_AU', 'en_CA', 'en_NZ', 'en_ZA', 'en_GB' ]\r\n\t},\r\n\t{\r\n\t\t// Replaces two hyphens with em dash\r\n\t\tname: '2hyphens',\r\n\t\tmask: /(?:\\-)\\-/,\r\n\t\treplace: '—',\r\n\t\tnbMoved: -1,\r\n\t\tlocales: [ 'fr_FR', 'fr_BE', 'en_US', 'en_AU', 'en_CA', 'en_NZ', 'en_ZA', 'en_GB' ]\r\n\t},\r\n\t{\r\n\t\t// Adds HTML tag sup to ordinal number suffix\r\n\t\tname: 'ordinalNumberSuffix',\r\n\t\tmask: /([10-9]{1,20})(th|nd|rd|e|er|res|d|ds|de|des)(?= | )/,\r\n\t\treplace: '$1<sup>$2<\\/sup>',\r\n\t\tnbMoved: 0,\r\n\t\tlocales: [ 'fr_FR', 'fr_BE', 'en_US', 'en_AU', 'en_CA', 'en_NZ', 'en_ZA', 'en_GB' ]\r\n\t},\r\n\t{\r\n\t\t// Replaces regular quotes with curly quotes\r\n\t\tname: 'regularToCurlyQuotes',\r\n\t\tmask: /\"/, // specific mask with specific process\r\n\t\treplace: '“$1”',\r\n\t\tnbMoved: 0,\r\n\t\tlocales: [ 'en_US', 'en_AU', 'en_CA', 'en_NZ', 'en_ZA', 'en_GB' ]\r\n\t},\r\n\t{\r\n\t\t// Replaces regular quotes with french quotes\r\n\t\tname: 'regularToFrenchQuotes',\r\n\t\tmask: /\"/, // specific mask with specific process\r\n\t\treplace: '« $1 »',\r\n\t\tnbMoved: 1,\r\n\t\tlocales: [ 'fr_FR', 'fr_BE' ]\r\n\t},\r\n\t{\r\n\t\t// Replaces a breaking space followed by a character from this list [? ! : ; » € $ £ ¥ ₽ 元 %] with a non-breaking space\r\n\t\tname: 'breakingSpace',\r\n\t\tmask: / ([\\?|\\!|\\:|\\;|\\»|\\€|\\$|\\£|\\¥|\\₽|\\元|\\%])/,\r\n\t\treplace: ' $1',\r\n\t\tnbMoved: 0,\r\n\t\tlocales: [ 'fr_FR', 'fr_BE' ]\r\n\t},\r\n\t{\r\n\t\t// Adds a non-breaking space before a character from this list [? ! : ; » € $ £ ¥ ₽ 元 %] having no space before\r\n\t\tname: 'noSpaceBefore',\r\n\t\tmask: /(?<! | |&nbsp;)([\\?|\\!|\\:|\\»|\\€|\\$|\\£|\\¥|\\₽|\\元|\\%])/,\r\n\t\treplace: ' $1',\r\n\t\tnbMoved: 1,\r\n\t\tlocales: [ 'fr_FR', 'fr_BE' ]\r\n\t},\r\n\t{\r\n\t\t// Adds a non-breaking space after [«] having no space after\r\n\t\tname: 'noNonBreakingSpaceAfter',\r\n\t\tmask: /(«)(?! | |&nbsp;)/,\r\n\t\treplace: '$1 ',\r\n\t\tnbMoved: 0,\r\n\t\tlocales: [ 'fr_FR', 'fr_BE' ]\r\n\t},\r\n\t{\r\n\t\t// Adds a breaking space after a character from this list [, … ) ]] if this character is followed with another character except [, .] and a number\r\n\t\tname: 'noBreakingSpaceAfter',\r\n\t\tmask: /([\\,|\\…|\\)|\\]])(?! | |\\.|\\,|\\d)/,\r\n\t\treplace: '$1 ',\r\n\t\tnbMoved: 1,\r\n\t\tlocales: [ 'fr_FR', 'fr_BE', 'en_US', 'en_AU', 'en_CA', 'en_NZ', 'en_ZA', 'en_GB' ]\r\n\t},\r\n\t{\r\n\t\t// Capitalize the first letter of a sentence\r\n\t\tname: 'capitalizeFirstSentenceLetter',\r\n\t\tmask: /(^[a-záàâäãåçéèêëíìîïñóòôöõúùûüýÿæœ])|(?<=[\\.|\\?|\\!|\\…] )[a-záàâäãåçéèêëíìîïñóòôöõúùûüýÿæœ]/,\r\n\t\treplace: matched => matched.toUpperCase(),\r\n\t\tnbMoved: 0,\r\n\t\tlocales: [ 'fr_FR', 'fr_BE', 'en_US', 'en_AU', 'en_CA', 'en_NZ', 'en_ZA', 'en_GB' ]\r\n\t},\r\n\t{\r\n\t\t// Removes any space preceding a character from this list [? ! : ; %]\r\n\t\tname: 'spaceBefore',\r\n\t\tmask: /([ | ])(?=[\\?|\\!|\\:|\\;|\\%])/,\r\n\t\treplace: '',\r\n\t\tnbMoved: -1,\r\n\t\tlocales: [ 'en_US', 'en_AU', 'en_CA', 'en_NZ', 'en_ZA', 'en_GB' ]\r\n\t}\r\n]\r\n\r\n// Regular expressions with pairs\r\nexport const regsWithPair = [\r\n\t'regularToCurlyQuotes',\r\n\t'regularToFrenchQuotes',\r\n]\r\n\r\n","/**\r\n * WordPress dependencies\r\n */\r\nimport { __ } from '@wordpress/i18n'\r\nimport { useDispatch } from '@wordpress/data'\r\nimport { PanelRow, ToggleControl } from '@wordpress/components'\r\nimport { store as coreStore, useEntityProp } from '@wordpress/core-data'\r\nimport { store as noticesStore } from '@wordpress/notices'\r\n\r\n/**\r\n * External dependencies\r\n */\r\nimport { isUsedByLocale } from '../app/controls'\r\n\r\nexport const ConsistencyGlobalSettingToggle = props => {\r\n\r\n\tconst { settingSlug, settingName, settingDescription } = props\r\n\r\n\tif ( ! isUsedByLocale( settingSlug ) ) return ''\r\n\r\n\tconst [ settings, setSettings ] = useEntityProp(\r\n\t\t'root',\r\n\t\t'site',\r\n\t\t'consistency_plugin_settings',\r\n\t\tundefined\r\n\t)\r\n\r\n\tconst { saveEditedEntityRecord } = useDispatch( coreStore )\r\n\tconst { createNotice } = useDispatch( noticesStore )\r\n\t\t\r\n\tconst onSettingChanged = value => {\r\n\r\n\t\tlet newSettings = settings.map( obj => {\r\n\t\t\tif ( settingSlug === obj.slug ) {\r\n\t\t\t  return { ...obj, value: value }\r\n\t\t\t}\r\n\t\t\treturn obj\r\n\t\t} )\r\n\r\n\t\tif ( ! newSettings?.find( x => x.slug === settingSlug ) ) {\r\n\t\t\tnewSettings.push( { slug: settingSlug, value: value } )\r\n\t\t}\r\n\t\t\r\n\t\tsetSettings( newSettings )\r\n\t\tsaveEditedEntityRecord( 'root', 'site', undefined, newSettings )\r\n\t\t\r\n\t\tcreateNotice(\r\n\t\t\t__( 'info', 'consistency' ), // Can be one of: success, info, warning, error.\r\n\t\t\tvalue\r\n\t\t\t\t? sprintf( __( '\"%1$s\" Correction is enabled', 'consistency' ), settingName\t)\r\n\t\t\t\t: sprintf( __( '\"%1$s\" Correction is disabled', 'consistency' ), settingName ),\r\n\t\t\t{ isDismissible: true, type: 'snackbar', speak: true }\r\n\t\t)\r\n\t}\r\n\r\n    return(\r\n\t\t<PanelRow>\r\n\t\t\t<ToggleControl\r\n\t\t\t\tlabel={ settingName }\r\n\t\t\t\thelp={ ( <span dangerouslySetInnerHTML={ settingDescription } /> ) }\r\n\t\t\t\tchecked={ settings?.find( x => x.slug === settingSlug )?.value || false }\r\n\t\t\t\tonChange={ onSettingChanged }\r\n\t\t\t/>\r\n\t\t</PanelRow>\r\n    )\r\n}","/**\r\n * WordPress dependencies\r\n */\r\nimport { __ } from '@wordpress/i18n'\r\nimport { useDispatch, useSelect } from '@wordpress/data'\r\nimport { ToggleControl } from '@wordpress/components'\r\nimport { store as coreStore, useEntityProp } from '@wordpress/core-data'\r\nimport { store as noticesStore } from '@wordpress/notices'\r\n\r\nexport const ConsistencyUserSettingToggle = props => {\r\n\r\n\tconst { settingSlug, settingName, settingDescription } = props\r\n\r\n\tconst { currentUser } = useSelect( select => {\t\t\r\n\t\treturn { currentUser: select( coreStore ).getCurrentUser()\t}\r\n\t}, [] )\r\n\tconst idUser = currentUser && currentUser.id\r\n\r\n\tconst [ settings, setSettings ] = useEntityProp(\r\n\t\t'root',\r\n\t\t'user',\r\n\t\t'meta',\r\n\t\tidUser\r\n\t)\r\n\r\n\tconst { saveEditedEntityRecord } = useDispatch( coreStore )\r\n\tconst { createNotice } = useDispatch( noticesStore )\r\n\t\r\n\tconst onSettingChanged = value => {\r\n\t\t// For usermeta, settings= meta\r\n\t\tlet newSettings = settings?.consistency_plugin_user_settings.map( obj => {\r\n\t\t\tif ( settingSlug === obj.slug ) {\r\n\t\t\t  return { ...obj, value: value }\r\n\t\t\t}\r\n\t\t\treturn obj\r\n\t\t} )\r\n\r\n\t\tif ( ! newSettings?.find( x => x.slug === settingSlug ) ) {\r\n\t\t\tnewSettings.push( { slug: settingSlug, value: value } )\r\n\t\t}\r\n\t\t\r\n\t\tsetSettings( { ...settings, consistency_plugin_user_settings: newSettings } )\r\n\r\n\t\tsaveEditedEntityRecord( 'root', 'user', idUser, { ...settings, meta: newSettings } )\r\n\r\n\t\tcreateNotice(\r\n\t\t\t__( 'info', 'consistency' ), // Can be one of: success, info, warning, error.\r\n\t\t\tvalue\r\n\t\t\t\t? sprintf( __( '\"%1$s\" Correction is enabled', 'consistency' ), settingName\t)\r\n\t\t\t\t: sprintf( __( '\"%1$s\" Correction is disabled', 'consistency' ), settingName ),\r\n\t\t\t{ isDismissible: true, type: 'snackbar', speak: true }\r\n\t\t)\r\n\t}\r\n\r\n    return(\r\n        <ToggleControl\r\n            label={ settingName }\r\n\t\t\thelp={ ( <span dangerouslySetInnerHTML={ settingDescription } /> ) }\r\n            checked={ settings?.consistency_plugin_user_settings?.find( x => x.slug === settingSlug )?.value || false }\r\n            onChange={ onSettingChanged }\r\n        />\r\n    )\r\n}","/**\n * WordPress dependencies\n */\nimport { Icon } from '@wordpress/components'\n\nexport const ConsistencyIcon = () => {\n\treturn(\n\t\t<Icon icon={ <svg version=\"1.1\" id=\"consistency-plugin\" x=\"0px\" y=\"0px\"\twidth=\"24px\" height=\"24px\" viewBox=\"0 0 24 24\" enableBackground=\"new 0 0 24 24\"><line fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\" x1=\"4\" y1=\"20\" x2=\"7\" y2=\"20\"/><line fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\" x1=\"14\" y1=\"20\" x2=\"21\" y2=\"20\"/><line fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\" x1=\"6.9\" y1=\"15\" x2=\"13.8\" y2=\"15\"/><line fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\" x1=\"10.2\" y1=\"6.3\" x2=\"16\" y2=\"20\"/><polyline fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\" points=\"5,20 11,4 13,4 20,20 \"/></svg> } />\n\t)\n}\n\n","/**\r\n * WordPress dependencies\r\n */\r\nimport { __ } from '@wordpress/i18n'\r\nimport { PluginSidebarMoreMenuItem, PluginSidebar } from '@wordpress/edit-post'\r\nimport { PanelBody, PanelRow } from '@wordpress/components'\r\nimport { select } from '@wordpress/data'\r\n\r\n/**\r\n * External dependencies\r\n */\r\nimport { ConsistencyIcon } from './Icon'\r\nimport { ConsistencyUserSettingToggle } from './ConsistencyUserSettingToggle'\r\nimport { ConsistencyGlobalSettingToggle } from './ConsistencyGlobalSettingToggle'\r\n\r\nconst { canUser } = select( 'core' )\r\n\r\nexport const SidebarSettings = () => {\r\n\tconst isAdmin = canUser( 'create', 'users' )\r\n\r\n    return(\r\n        <>\r\n            <PluginSidebar\r\n                name='consistency-custom-sidebar'\r\n                title={ __( 'Consistency', 'consistency' ) }\r\n\t\t\t\ticon={ ConsistencyIcon }\r\n            >\r\n\t\t\t\t<PanelBody\r\n\t\t\t\t\ttitle={ __( 'Settings for my account', 'consistency' ) }\r\n\t\t\t\t\tinitialOpen={ true }\r\n\t\t\t\t>\r\n\t\t\t\t\t<PanelRow>\r\n\t\t\t\t\t\t<ConsistencyUserSettingToggle\r\n\t\t\t\t\t\t\tsettingSlug='on_the_fly' \r\n\t\t\t\t\t\t\tsettingName={ __( 'On-the-fly autocorrect', 'consistency' ) }\r\n\t\t\t\t\t\t\tsettingDescription={ {\r\n\t\t\t\t\t\t\t\t__html: __( 'Enable/disable on-the-fly autocorrect for my account', 'consistency' )\r\n\t\t\t\t\t\t\t\t} }\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</PanelRow>\r\n\t\t\t\t\t<PanelRow>\r\n\t\t\t\t\t\t<ConsistencyUserSettingToggle\r\n\t\t\t\t\t\t\tsettingSlug='on_paste' \r\n\t\t\t\t\t\t\tsettingName={ __( 'On paste autocorrect', 'consistency' ) }\r\n\t\t\t\t\t\t\tsettingDescription={ {\r\n\t\t\t\t\t\t\t\t__html: __( 'Enable/disable autocorrect on paste for my account', 'consistency' )\r\n\t\t\t\t\t\t\t\t} }\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</PanelRow>\r\n\t\t\t\t</PanelBody>\r\n\t\t\t\t{ isAdmin && \r\n\t\t\t\t\t<PanelBody\r\n\t\t\t\t\t\ttitle={ __( 'Global correction rules', 'consistency' ) }\r\n\t\t\t\t\t\tinitialOpen={ false }\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<ConsistencyGlobalSettingToggle\r\n\t\t\t\t\t\t\tsettingSlug='quote' \r\n\t\t\t\t\t\t\tsettingName={ __( 'Straight quote', 'consistency' ) }\r\n\t\t\t\t\t\t\tsettingDescription={ {\r\n\t\t\t\t\t\t\t\t__html: __( 'Replaces straight quotes with curved quotes:', 'consistency' )\r\n\t\t\t\t\t\t\t\t\t+ `<span aria-hidden='true' style='display:block;'><code>'</code> <span style='font-size:20px'>→</span> <code>’</code></span>`\r\n\t\t\t\t\t\t\t\t} }\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<ConsistencyGlobalSettingToggle\r\n\t\t\t\t\t\t\tsettingSlug='ellipsis' \r\n\t\t\t\t\t\t\tsettingName={ __( 'Ellipsis', 'consistency' ) }\r\n\t\t\t\t\t\t\tsettingDescription={ {\r\n\t\t\t\t\t\t\t\t__html: __( 'Replaces 3 dots with ellipsis:', 'consistency' )\r\n\t\t\t\t\t\t\t\t\t+ `<span aria-hidden='true' style={ { display: 'block' } }><code>...</code> <span style={ { fontSize: '20px' } }>→</span> <code>…</code></span>`\r\n\t\t\t\t\t\t\t\t} }\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<ConsistencyGlobalSettingToggle\r\n\t\t\t\t\t\t\tsettingSlug='2hyphens' \r\n\t\t\t\t\t\t\tsettingName={ __( 'Two hyphens', 'consistency' ) }\r\n\t\t\t\t\t\t\tsettingDescription={ {\r\n\t\t\t\t\t\t\t\t__html: __( 'Replaces 2 hyphens with em dash:', 'consistency' )\r\n\t\t\t\t\t\t\t\t\t+ `<span aria-hidden='true' style={ { display: 'block' } }><code>--</code> <span style={ { fontSize: '20px' } }>→</span> <code>—</code></span>`\r\n\t\t\t\t\t\t\t\t} }\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<ConsistencyGlobalSettingToggle\r\n\t\t\t\t\t\t\tsettingSlug='ordinalNumberSuffix' \r\n\t\t\t\t\t\t\tsettingName={ __( 'Ordinal number suffix', 'consistency' ) }\r\n\t\t\t\t\t\t\tsettingDescription={ {\r\n\t\t\t\t\t\t\t\t__html: __( 'Add HTML tag sup to ordinal number suffix', 'consistency' )\r\n\t\t\t\t\t\t\t\t} }\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<ConsistencyGlobalSettingToggle\r\n\t\t\t\t\t\t\tsettingSlug='regularToCurlyQuotes' \r\n\t\t\t\t\t\t\tsettingName={ __( 'Regular quotes to curly', 'consistency' ) }\r\n\t\t\t\t\t\t\tsettingDescription={ {\r\n\t\t\t\t\t\t\t\t__html: __( 'Replaces regular quotes with curly quotes:', 'consistency' )\r\n\t\t\t\t\t\t\t\t\t+ `<span aria-hidden='true' style={ { display: 'block' } }><code>\" \"</code> <span style={ { fontSize: '20px' } }>→</span> <code>“ ”</code></span>`\r\n\t\t\t\t\t\t\t\t} }\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<ConsistencyGlobalSettingToggle\r\n\t\t\t\t\t\t\tsettingSlug='regularToFrenchQuotes' \r\n\t\t\t\t\t\t\tsettingName={ __( 'Regular quotes to french', 'consistency' ) }\r\n\t\t\t\t\t\t\tsettingDescription={ {\r\n\t\t\t\t\t\t\t\t__html: __( 'Replaces regular quotes with french quotes:', 'consistency' )\r\n\t\t\t\t\t\t\t\t\t+ `<span aria-hidden='true' style={ { display: 'block' } }><code>\" \"</code> <span style={ { fontSize: '20px' } }>→</span> <code>« »</code></span>`\r\n\t\t\t\t\t\t\t\t} }\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<ConsistencyGlobalSettingToggle \r\n\t\t\t\t\t\t\tsettingSlug='breakingSpace' \r\n\t\t\t\t\t\t\tsettingName={ __( 'Breaking space', 'consistency' ) }\r\n\t\t\t\t\t\t\tsettingDescription={ {\r\n\t\t\t\t\t\t\t\t__html: sprintf( __( 'Replaces a breaking space followed by a character from this list:%1$s with a non-breaking space', 'consistency' )\r\n\t\t\t\t\t\t\t\t\t, `<br /><code>? ! : ; » € $ £ ¥ ₽ 元 %</code><br />` )\r\n\t\t\t\t\t\t\t\t} }\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<ConsistencyGlobalSettingToggle \r\n\t\t\t\t\t\t\tsettingSlug='noSpaceBefore' \r\n\t\t\t\t\t\t\tsettingName={ __( 'No space before', 'consistency' ) }\r\n\t\t\t\t\t\t\tsettingDescription={ {\r\n\t\t\t\t\t\t\t\t__html: sprintf( __( 'Adds a non-breaking space before a character from this list:%1$s having no space before', 'consistency' )\r\n\t\t\t\t\t\t\t\t\t, `<br /><code>? ! : ; » € $ £ ¥ ₽ 元 %</code><br />` )\r\n\t\t\t\t\t\t\t\t} }\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<ConsistencyGlobalSettingToggle \r\n\t\t\t\t\t\t\tsettingSlug='noBreakingSpaceAfter' \r\n\t\t\t\t\t\t\tsettingName={ __( 'No breaking space after', 'consistency' ) }\r\n\t\t\t\t\t\t\tsettingDescription={ {\r\n\t\t\t\t\t\t\t\t__html: sprintf( __( 'Adds a breaking space after a character from this list:%1$s when followed with another character', 'consistency' )\r\n\t\t\t\t\t\t\t\t\t, `<br /><code>, … ) ]</code><br />` )\r\n\t\t\t\t\t\t\t\t} }\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<ConsistencyGlobalSettingToggle\r\n\t\t\t\t\t\t\tsettingSlug='noNonBreakingSpaceAfter' \r\n\t\t\t\t\t\t\tsettingName={ __( 'No non breaking space after', 'consistency' ) }\r\n\t\t\t\t\t\t\tsettingDescription={ {\r\n\t\t\t\t\t\t\t\t__html: __( 'Adds a non-breaking space after open french quote having no space after', 'consistency' )\r\n\t\t\t\t\t\t\t\t} }\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<ConsistencyGlobalSettingToggle\r\n\t\t\t\t\t\t\tsettingSlug='spaceBefore' \r\n\t\t\t\t\t\t\tsettingName={ __( 'Space before', 'consistency' ) }\r\n\t\t\t\t\t\t\tsettingDescription={ {\r\n\t\t\t\t\t\t\t\t__html: __( 'Remove any space preceding a character from this list:', 'consistency' )\r\n\t\t\t\t\t\t\t\t\t+ `<span style={ { display: 'block' } }><code>? ! : ; %</code></span>`\r\n\t\t\t\t\t\t\t\t} }\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<ConsistencyGlobalSettingToggle\r\n\t\t\t\t\t\t\tsettingSlug='capitalizeFirstSentenceLetter' \r\n\t\t\t\t\t\t\tsettingName={ __( 'First sentence letter not capitalized', 'consistency' ) }\r\n\t\t\t\t\t\t\tsettingDescription={ {\r\n\t\t\t\t\t\t\t\t__html: __( 'Capitalize the first letter of a sentence', 'consistency' )\r\n\t\t\t\t\t\t\t\t} }\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</PanelBody>\r\n\t\t\t\t}\r\n            </PluginSidebar>\r\n            <PluginSidebarMoreMenuItem target='consistency-custom-sidebar'>\r\n\t\t\t\t{ __( 'Consistency Settings', 'consistency' ) }\r\n\t\t\t</PluginSidebarMoreMenuItem>\r\n        </>\r\n    )\r\n}\r\n","module.exports = window[\"wp\"][\"components\"];","module.exports = window[\"wp\"][\"coreData\"];","module.exports = window[\"wp\"][\"data\"];","module.exports = window[\"wp\"][\"domReady\"];","module.exports = window[\"wp\"][\"editPost\"];","module.exports = window[\"wp\"][\"element\"];","module.exports = window[\"wp\"][\"i18n\"];","module.exports = window[\"wp\"][\"notices\"];","module.exports = window[\"wp\"][\"plugins\"];","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","/**\r\n * WordPress dependencies\r\n */\r\nimport { registerPlugin } from '@wordpress/plugins'\r\nimport { subscribe, select, dispatch } from '@wordpress/data'\r\nimport domReady from '@wordpress/dom-ready'\r\nimport { SidebarSettings } from './components/Settings'\r\n\r\n/**\r\n * External dependencies\r\n */\r\nimport { fixIt } from './app/fix'\r\nimport { regs, processedBlocks, regsWithPair } from './app/rules'\r\nimport { getAllInnersFromParents } from './app/helpers'\r\nimport { isUsedByLocale } from './app/controls'\r\nimport { getCurrentUserSettings } from './app/data'\r\n\r\nlet contentPasted = false\r\n\r\nlet theRegs = []\r\n\r\nconst { getBlocks, getSelectedBlockClientId, isTyping, getBlockAttributes } = select( 'core/block-editor' )\r\nconst { getEntityRecord } = select( 'core' )\r\nconst { updateBlockAttributes } = dispatch( 'core/block-editor' )\r\n\r\nregisterPlugin( 'consistency-custom-sidebar', {\r\n    render: SidebarSettings,\r\n} )\r\n\r\ndomReady( () => {\r\n\r\n\t// This global makes it possible to count the loops on the regex in order to trigger a cut on a possible infinite loop\r\n\tglobal.consistencyLoop = 0\r\n\tglobal.consistencyHistoryContent = ''\r\n\tglobal.consistencyHistory = false\r\n\r\n\t// Fix all blocks in post: only used in content copy/paste\r\n\tconst fixAll = () => {\r\n\t\t// Get all blocks generated by pasting (which does not integrate innerBlocks)\r\n\t\tconst allBlocks = getBlocks()\r\n\r\n\t\t// Get all innerBlocks for a later bulk selection process that will generate their fix\r\n\t\tconst allInners = getAllInnersFromParents( allBlocks )\r\n\t\r\n\t\t// Fixes all parents blocks\r\n\t\tconst updates = allBlocks.reduce( ( acc, block ) => {\r\n\r\n\t\t\tlet newContent = block.attributes?.content\r\n\r\n\t\t\tif ( ! processedBlocks.includes( block.name )\r\n\t\t\t\t|| undefined === newContent ) {\r\n\t\t\t\treturn acc\r\n\t\t\t}\r\n\r\n\t\t\tObject.entries( theRegs ).forEach( ( [ _, reg ] ) => {\r\n\r\n\t\t\t\tif ( isUsedByLocale( reg.name ) && regsWithPair.includes( reg.name ) ) {\r\n\t\t\t\t\tconst singleCharacterOfPair = reg.mask.toString().match( /(?<=\\/).+?(?=\\/)/g )[0]\r\n\t\t\t\t\tconst realReg = new RegExp( `/(?<!\\=)${singleCharacterOfPair}(?!>)([^${singleCharacterOfPair}]*)(?<!\\=)${singleCharacterOfPair}(?!>)/`, 'g' )\r\n\t\t\t\t\tnewContent = newContent.replaceAll( realReg, reg.replace )\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( isUsedByLocale( reg.name ) && ! regsWithPair.includes( reg.name ) ) {\r\n\t\t\t\t\tconst stringRegex = reg.mask.toString()\r\n\t\t\t\t\tconst regWithGlobalFlag = new RegExp( stringRegex.substring( 1, stringRegex.length - 1 ), 'g' )\r\n\t\t\t\t\tnewContent = newContent.replaceAll( regWithGlobalFlag, reg.replace )\r\n\t\t\t\t}\r\n\r\n\t\t\t} )\r\n\r\n\t\t\tif ( undefined !== newContent ) {\r\n\t\t\t\tacc[ block.clientId ] = { content: newContent }\r\n\t\t\t}\r\n\t\t\treturn acc\r\n\t\t}, {} )\r\n\r\n\t\t// Update all parents blocks\r\n\t\tif ( Object.keys( updates ).length && contentPasted ) {\r\n\t\t\tcontentPasted = false\r\n\t\t\tupdateBlockAttributes( Object.keys( updates ), updates, true )\r\n\t\t}\r\n\r\n\t\tcontentPasted = false\r\n\r\n\t\t// Select all innerBlocks to trigger their correction, then deselect all by selecting the first block\r\n\t\tconst isPasting = true\r\n\t\tallInners.forEach( block => { \r\n\t\t\tif ( ! processedBlocks.includes( block.name ) ) return\r\n\t\t\tconst currentBlockId = block.clientId\r\n\t\t\tblock?.clientId && fixIt( { currentBlockId, theRegs, isPasting } )\r\n\t\t} )\r\n\t}\r\n\r\n\t// Intercept clipboard paste to fix all new blocks\r\n\tdocument.querySelector( '#editor' )?.addEventListener( 'paste', e => {\r\n\t\tcontentPasted = true\r\n\t\te.preventDefault()\r\n\t} )\r\n\r\n\t// Intercept CTRL Z to cancel next fix\r\n\tdocument.querySelector( '#editor' )?.addEventListener( 'keydown', e => {\r\n\t\tif ( 90 === e.keyCode && ( e.ctrlKey || e.metaKey ) ) {\r\n\t\t\tglobal.consistencyHistory = true\r\n\t\t\te.preventDefault()\r\n\t\t}\r\n\t} )\r\n\r\n\t// Let’s listen for state changes\r\n\tsubscribe( () => {\r\n\r\n\t\t// Get current user settings\r\n\t\tconst { onTheFly, onPaste } = getCurrentUserSettings()\r\n\r\n\t\t// If everything is disabled, nothing is done\r\n\t\tif ( ! onTheFly && ! onPaste ) return\r\n\r\n\t\t// Get Global settings from site entity\r\n\t\tconst siteEntity = getEntityRecord( 'root', 'site' )\r\n\t\tconst settings = siteEntity?.consistency_plugin_settings\r\n\t\tif ( undefined === settings ) return\r\n\t\r\n\t\t// Get the regex of all rules\r\n\t\ttheRegs = regs.filter( reg => true === settings?.find( s => s.slug === reg.name )?.value )\r\n\r\n\t\t// Manage clipboard and fix all blocks\r\n\t\tif ( contentPasted && onPaste ) {\r\n\t\t\tfixAll()\r\n\t\t\treturn\r\n\t\t}\r\n\r\n\t\t// Get current selected block\r\n\t\tconst currentBlockId = getSelectedBlockClientId()\r\n\r\n\t\t// Stop here if everything is disabled\r\n\t\tif ( null === currentBlockId || contentPasted || ! onTheFly ) return\r\n\r\n\t\t// Don't try to fix block content if nothing has changed\r\n\t\tconst blockAttributes = getBlockAttributes( currentBlockId )\r\n\t\tif ( blockAttributes.hasOwnProperty( 'content' ) && global.consistencyHistoryContent === blockAttributes.content ) {\r\n\t\t\treturn\r\n\t\t}\r\n\t\tglobal.consistencyHistoryContent = blockAttributes.content\r\n\r\n\t\t// Fixes the typography of current selected block\r\n\t\tconst isPasting = false\r\n\t\ttheRegs && isTyping() && fixIt( { currentBlockId, theRegs, isPasting } )\r\n\t\r\n\t} )\r\n} )\r\n"],"names":["select","getCurrentLocale","regs","regsWithPair","processedBlocks","getBlockName","getBlockAttributes","isUsedByLocale","settingSlug","currentLocale","theRegex","find","x","name","undefined","locales","includes","blockShouldBeChecked","currentBlockId","blockName","blockCanBeChecked","blockAttributes","hasOwnProperty","content","regDealWithPair","reg","store","coreStore","getEntityRecord","getCurrentUserSettings","userSettings","onTheFly","onPaste","currentUser","getCurrentUser","idUser","id","currentUserEntity","userConsistencySettings","meta","consistency_plugin_user_settings","s","slug","value","siteEntity","language","dispatch","getReplacementStringForPairs","aMemoryLeakHasOccured","getCursorPositionInInnerHTML","getBlock","getSelectionStart","isTyping","updateBlock","selectionChange","fixIt","props","theRegs","isPasting","block","Object","entries","forEach","_","global","consistencyLoop","replaceWithThis","replace","firstPart","lastPart","cursorPosition","blockContent","selectionStart","textContentWithoutCode","textContent","isConcerned","mask","test","offset","cursorPositionInsideHTML","captureGroups","match","length","lengthToGoBack","substring","consistencyHistory","attributes","nbMoved","attributeKey","getAllInnersFromParents","arr","flatMap","innerBlocks","rest","map","b","fullBlockContent","openPairChar","charAt","closPairChar","leftSep","indexOf","rightSep","matchAll","pop","getOpenPairRegex","RegExp","getClosPairRegex","nbOpenPair","nbClosPair","slice","consistency_loop","console","log","currentActiveBlock","document","querySelector","selection","getSelection","_range","getRangeAt","collapsed","range","cloneRange","tempNode","createTextNode","insertNode","innerHTML","parentNode","removeChild","normalize","nbNbsp","matched","toUpperCase","__","useDispatch","PanelRow","ToggleControl","useEntityProp","noticesStore","ConsistencyGlobalSettingToggle","settingName","settingDescription","settings","setSettings","saveEditedEntityRecord","createNotice","onSettingChanged","newSettings","obj","push","sprintf","isDismissible","type","speak","useSelect","ConsistencyUserSettingToggle","Icon","ConsistencyIcon","PluginSidebarMoreMenuItem","PluginSidebar","PanelBody","canUser","SidebarSettings","isAdmin","__html","registerPlugin","subscribe","domReady","contentPasted","getBlocks","getSelectedBlockClientId","updateBlockAttributes","render","consistencyHistoryContent","fixAll","allBlocks","allInners","updates","reduce","acc","newContent","singleCharacterOfPair","toString","realReg","replaceAll","stringRegex","regWithGlobalFlag","clientId","keys","addEventListener","e","preventDefault","keyCode","ctrlKey","metaKey","consistency_plugin_settings","filter"],"sourceRoot":""}